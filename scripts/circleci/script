#!/usr/bin/env ruby

# This script handles the CircleCI build execution in the 'script' phase.
# It runs RuboCop and RSpec.

require 'pathname'
require 'fileutils'

require_relative 'checks/footprint'

MAX_RSS = 10_000
MAX_TIME = 100
MAX_CLI_TIME = 350

archfiend_root = Pathname.new File.expand_path(File.join('..', '..'), __dir__)

def system!(*args)
  system(*args) || abort("\n== Command #{args} failed ==")
end

system!('BUNDLE_GEMFILE=Gemfile bundle exec rubocop')
system!('BUNDLE_GEMFILE=Gemfile bundle exec rspec')

footprint_checker = Checks::Footprint.new
footprint_checker.check('RunTime', './lib/archfiend', MAX_RSS, MAX_TIME)
footprint_checker.check('CLI', './lib/archfiend/cli', MAX_RSS, MAX_CLI_TIME)

system!('mkdir testing')
FileUtils.chdir(archfiend_root.join('testing')) do
  system!('bundle exec archfiend new foo_bar')
end

FileUtils.chdir(archfiend_root.join('testing', 'foo_bar')) do
  system!(%(sed -i s/.*''archfiend''.*// Gemfile)) # Remove the existing archfiend entry
  File.open('Gemfile', 'a') { |f| f.puts "gem 'archfiend', path: '../..'" } # Use the local gem
  system!('bundle install')
end

database_yml = '
test:
  adapter: postgresql
  database: foo_bar_test
'

File.open(archfiend_root.join('testing', 'foo_bar', 'config', 'database.yml'), 'w') do |f|
  f.puts(database_yml)
end

FileUtils.chdir(File.join('testing', 'foo_bar')) do
  system!('BUNDLE_GEMFILE=Gemfile bundle exec rake db:create')
  system!('BUNDLE_GEMFILE=Gemfile bundle exec rake db:migrate')
  system!('BUNDLE_GEMFILE=Gemfile bundle exec rspec')
  system!('BUNDLE_GEMFILE=Gemfile bundle exec rubocop')

  system!('BUNDLE_GEMFILE=Gemfile bin/start -d')
  sleep(1)
  system!('ps -o pid= -p `cat foo_bar.pid`')
end
